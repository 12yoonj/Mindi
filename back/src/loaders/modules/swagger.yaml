# npm run api-docs
# "prestart": "npm run api-docs",
openapi: '3.0.0'
info:
  version: 1.0.0
  title: Mindi_API
  description: |
    # Mindi의 API 명세서
servers:
  - url: 'http://localhost:5001/api/'
tags:
  - name: diaries
    description: 일기 작성, 조회, 수정, 삭제 등
  - name: auth
    description: 유저 로그인, 회원가입 등
  - name: users
    description: 회원 탈퇴, 정보 조회, 정보 수정 등
  - name: posts
    description: 게시글 작성, 조회, 수정, 삭제 등
  - name: comments
    description: 댓글 작성, 조회, 수정, 삭제 등
paths:
  /diaries:
    post:
      $ref: './paths/diary.yaml#/Post'
    put:
      $ref: './paths/diary.yaml#/Update'
    delete:
      $ref: './paths/diary.yaml#/Delete'
  /diaries?date={createdDate}:
    get:
      $ref: './paths/diary.yaml#/GetAList'
  /diaries/{id}:
    get:
      $ref: './paths/diary.yaml#/GetADiary'
  /users:
    get:
      $ref: './paths/user.yaml#/Get'
    put:
      $ref: './paths/user.yaml#/Put'
    delete:
      $ref: './paths/user.yaml#/Delete'
  /posts:
    post:
      $ref: './paths/post.yaml#/Post'
    get:
      $ref: './paths/post.yaml#/Get'
  /posts/{postId}:
    get:
      $ref: './paths/post.yaml#/GetByPostId'
    put:
      $ref: './paths/post.yaml#/Put'
    delete:
      $ref: './paths/post.yaml#/Delete'
  /users/posts:
    get:
      $ref: './paths/post.yaml#/GetUsersPosts'
  /users/posts/{userId}:
    get:
      $ref: './paths/post.yaml#/GetUsersPostsByUserId'
  /comments/{commentId}:
    post:
      $ref: './paths/comment.yaml#/PostDaughterComment'
    get:
      $ref: './paths/comment.yaml#/Get'
    put:
      $ref: './paths/comment.yaml#/Put'
    delete:
      $ref: './paths/comment.yaml#/Delete'
  /posts/comments/{postId}:
    post:
      $ref: './paths/comment.yaml#/Post'
    get:
      $ref: './paths/comment.yaml#/GetPostComments'
  /comments/children/{commentId}:
    get:
      $ref: './paths/comment.yaml#/GetChildren'
  /users/comments/{userId}:
    get:
      $ref: './paths/comment.yaml#/GetUserComments'


components:
  schemas:
    diary:
      $ref: './components/schemas/diary.yaml'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
